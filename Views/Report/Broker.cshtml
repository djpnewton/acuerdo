@using viafront3.Models.ReportViewModels
@using viafront3.Views
@model BrokerViewModel
@{
    ViewData["Title"] = "Broker Report";
    var startDate = Model.StartDate.HasValue ? Model.StartDate.Value.ToString("yyyy/MM/dd") : "";
    var endDate = Model.EndDate.HasValue ? Model.EndDate.Value.ToString("yyyy/MM/dd") : "";
    var email = Model.Email;
}
<h4>@ViewData["Title"]</h4>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Broker Orders
            </div>
            <div class="panel-body">
                <form id="search-form" asp-action="Broker" method="get" class="form-group form-inline">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <input type="hidden" asp-for="Offset" value="@Model.Offset" />
                    <input type="hidden" asp-for="Limit" value="@Model.Limit" />
                    <div class="form-group">
                        Start date:
                        <input type="text" asp-for="StartDate" class="datepicker onchange-submit" autocomplete="off" value="@startDate" />
                    </div>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <div class="form-group">
                        End date:
                        <input type="text" asp-for="EndDate" class="datepicker onchange-submit" autocomplete="off" value="@endDate" />
                    </div>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <div class="form-group">
                        Email:
                        <input type="text" asp-for="Email" class="onchange-submit" autocomplete="off" value="@email" />
                    </div>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <div class="form-group">
                        Show only:
                        <select asp-for="OrderStatus" class="onchange-submit">
                            <option value="@(BrokerOrderStatus.Confirmed)" selected="@(Model.OrderStatus == BrokerOrderStatus.Confirmed.ToString() ? "selected" : null)">@BrokerOrderStatus.Confirmed</option>
                            <option value="@(BrokerOrderStatus.PayoutWait)" selected="@(Model.OrderStatus == BrokerOrderStatus.PayoutWait.ToString() ? "selected" : null)">@BrokerOrderStatus.PayoutWait</option>
                            <option value="@(BrokerOrderStatus.Sent)" selected="@(Model.OrderStatus == BrokerOrderStatus.Sent.ToString() ? "selected" : null)">@BrokerOrderStatus.Sent</option>
                            <option value="@(BrokerOrderStatus.Error)" selected="@(Model.OrderStatus == BrokerOrderStatus.Error.ToString() ? "selected" : null)">@BrokerOrderStatus.Error</option>
                            <option value="" selected="@(Model.OrderStatus == null ? "selected" : null)">All</option>
                        </select>
                    </div>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <div class="form-group">
                        Exclude:
                        <select asp-for="NotOrderStatus" class="onchange-submit">
                            <option value="@(BrokerOrderStatus.Expired)" selected="@(Model.NotOrderStatus == BrokerOrderStatus.Expired.ToString() ? "selected" : null)">@BrokerOrderStatus.Expired</option>
                            <option value="" selected="@(Model.NotOrderStatus == null ? "selected" : null)">None</option>
                        </select>
                    </div>
                </form>
                <table class="table table-condensed table-responsive table-hover">
                    <tr>
                        <th>
                            Date
                        </th>
                        <th>
                            Token
                        </th>
                        <th>
                            InvoiceId
                        </th>
                        <th>
                            User
                        </th>
                        <th>
                            Market
                        </th>
                        <th>
                            Payment Address
                        </th>
                        <th class="pad-decimals">
                            Amount Send
                        </th>
                        <th class="pad-decimals">
                            Amount Receive
                        </th>
                        <th>
                            Recipient
                        </th>
                        <th>
                            Status
                        </th>
                    </tr>
                    <tbody>
                        @foreach (var item in Model.Orders)
                        {
                            @await Html.PartialAsync("_BrokerOrder", new ViewDataDictionary(ViewData)
                            {
                                { "order", item }, { "assetSettings", Model.AssetSettings }
                            });
                        }
                    </tbody>
                </table>
                @{
                    var count = Model.Count;
                    var offset = Model.Offset;
                    var limit = Model.Limit;
                    if (offset >= limit)
                    {
                        <a asp-action="Broker" asp-route-offset="@(offset-limit)" asp-route-limit="@limit" asp-route-startDate="@startDate" asp-route-endDate="@endDate" asp-route-email="@email" asp-route-orderStatus="@Model.OrderStatus" asp-route-notOrderStatus="@Model.NotOrderStatus">prev</a>
                    }
                    else if (offset > 0)
                    {
                        <a asp-action="Broker" asp-route-offset="0" asp-route-limit="@limit" asp-route-startDate="@startDate" asp-route-endDate="@endDate" asp-route-email="@email" asp-route-orderStatus="@Model.OrderStatus" asp-route-notOrderStatus="@Model.NotOrderStatus">prev</a>
                    }
                    if (count - offset > limit)
                    {
                        <a asp-action="Broker" asp-route-offset="@(offset+limit)" asp-route-limit="@limit" asp-route-startDate="@startDate" asp-route-endDate="@endDate" asp-route-email="@email" asp-route-orderStatus="@Model.OrderStatus" asp-route-notOrderStatus="@Model.NotOrderStatus">next</a>
                    }
                    <br />
                    <a asp-action="Broker" asp-route-offset="-1" asp-route-limit="-1" asp-route-startDate="@startDate" asp-route-endDate="@endDate" asp-route-email="@email" asp-route-orderStatus="@Model.OrderStatus" asp-route-notOrderStatus="@Model.NotOrderStatus" asp-route-csv="true">csv</a>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_PadDecimalsScriptsPartial")
    <environment include="Development">
        <script src="~/js/set-email.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/set-email.min.js" asp-append-version="true"></script>
    </environment>
}
