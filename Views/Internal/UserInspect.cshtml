@using viafront3.Models.InternalViewModels
@using viafront3.Views
@model UserViewModel
@{
    ViewData["Title"] = "User Inspect";
}
@using Microsoft.Extensions.Options
@inject IOptions<ExchangeSettings> ExchangeSettings
@{
    var settings = ExchangeSettings.Value;
}

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                User
            </div>
            <div class="panel-body">
                <table class="table table-condensed table-responsive table-hover">
                    <tr>
                        <th>
                            Id
                        </th>
                        <th>
                            Email
                        </th>
                        <th>
                            Name
                        </th>
                        <th>
                            Exchange Id
                        </th>
                    </tr>
                    <tbody>
                        <tr>
                            <td>
                                @Model.UserInspect.Id
                            </td>
                            <td>
                                @Model.UserInspect.Email
                            </td>
                            <td>
                                @Model.UserInspect.UserName
                            </td>
                            <td>
                                @Model.UserInspect.Exchange.Id
                            </td>
                        </tr>
                    </tbody>
                </table>
                <table class="table table-condensed table-responsive table-hover">
                    <tr>
                        <th>
                            Kyc Level
                        </th>
                        <th>
                            Kyc Request Url
                        </th>
                    </tr>
                    <tbody>
                        <tr>
                            <td>
                                <form asp-action="UserInspectKycSet" method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@Model.UserInspect.Id" />
                                    <select name="level">
                                        @{
                                            var levelInt = 0;
                                            foreach (var level in Model.KycSettings.Levels)
                                            {
                                                if (Model.KycLevel == level)
                                                {
                                                    <option value="@levelInt" selected>@level</option>
                                                }
                                                else
                                                {
                                                    <option value="@levelInt">@level</option>
                                                }
                                                levelInt++;
                                            }
                                        }
                                    </select>
                                    <input type="submit" />
                                </form>
                            </td>
                            <td>
                                <a href="@Model.KycRequestUrl">@Model.KycRequestUrl</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Current Balances
            </div>
            <div class="panel-body">
                @await Html.PartialAsync("_UserBalancesPartial", Model.Balances,
                    new ViewDataDictionary(this.ViewData) { { "asset_settings", Model.AssetSettings } })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Trades
            </div>
            <div class="panel-body">
                <ul class="nav nav-pills nav-stacked">
                    @foreach (var item in settings.Markets)
                    {
                        <li><a asp-action="UserInspectTrades" asp-route-id="@Model.UserInspect.Id" asp-route-market="@item.Key">@item.Key</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Wallet Txs
            </div>
            <div class="panel-body">
                <ul class="nav nav-pills nav-stacked">
                    @foreach (var item in settings.Assets)
                    {
                        <li><a asp-action="UserInspectWalletTxs" asp-route-id="@Model.UserInspect.Id" asp-route-asset="@item.Key">@item.Key</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Exchange Balance Updates
            </div>
            <div class="panel-body">
                <ul class="nav nav-pills nav-stacked">
                    @foreach (var item in settings.Assets)
                    {
                        <li><a asp-action="UserInspectExchangeBalanceHistory" asp-route-id="@Model.UserInspect.Id" asp-route-asset="@item.Key">@item.Key</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_PadDecimalsScriptsPartial")
}